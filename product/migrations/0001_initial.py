# Generated by Django 5.1.5 on 2025-04-11 17:03

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of the system category.', max_length=100)),
                ('description', models.TextField(help_text='A detailed description of the system category.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the category was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the category was last updated.')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the order was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the order was last updated.')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('shipped', 'Shipped'), ('delivered', 'Delivered')], default='pending', help_text='The current status of the order.', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='The total amount of the order.', max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', help_text='The payment status of the order.', max_length=20)),
                ('user', models.ForeignKey(blank=True, help_text='The user who placed the order.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(blank=True, help_text='The vendor who owns the order.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendors', to='account.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of the product.', max_length=100)),
                ('description', models.TextField(help_text='A detailed description of the product.')),
                ('price', models.DecimalField(decimal_places=2, help_text='The regular price of the product.', max_digits=10)),
                ('image', models.ImageField(blank=True, help_text='An image of the product.', null=True, upload_to='products/')),
                ('stock', models.IntegerField(default=0, help_text='The number of units available in stock.')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the product is active and available for sale.')),
                ('is_delete', models.BooleanField(default=False, help_text='Indicates whether the product is marked for deletion.')),
                ('is_featured', models.BooleanField(default=False, help_text='Indicates whether the product is marked for featured.')),
                ('apply_discount', models.BooleanField(default=False, help_text='Indicates whether a discount is applied to this product.')),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='The discount percentage on this product (e.g., 20 for 20%).', max_digits=5, null=True)),
                ('discount_start_date', models.DateTimeField(blank=True, help_text='The start date of the discount.', null=True)),
                ('discount_end_date', models.DateTimeField(blank=True, help_text='The end date of the discount.', null=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('purchases', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the product was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the product was last updated.')),
                ('vendor', models.ForeignKey(help_text='The vendor selling this product.', on_delete=django.db.models.deletion.CASCADE, to='account.vendor')),
                ('system_category', models.ForeignKey(blank=True, help_text='The system category to which this product belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, to='product.systemcategory')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1, help_text='The quantity of the product in the order.')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of the product at the time of the order.', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(help_text='The order to which this item belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='product.order')),
                ('product', models.ForeignKey(help_text='The product in this order item.', on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(help_text='Product image', upload_to='product_images')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the product image was')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the product image was last')),
                ('is_primary', models.BooleanField(default=False, help_text='Is this the primary image for the product')),
                ('is_active', models.BooleanField(default=True, help_text='Is this image active')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='VendorCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of the vendor category.', max_length=100)),
                ('description', models.TextField(help_text='A detailed description of the vendor category.')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether this vendor category is active or not.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the category was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the category was last updated.')),
                ('vendor', models.ForeignKey(help_text='The vendor associated with this category.', on_delete=django.db.models.deletion.CASCADE, to='account.vendor')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, help_text='The vendor category of this product.', null=True, on_delete=django.db.models.deletion.CASCADE, to='product.vendorcategory'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='product.product')),
            ],
            options={
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.CreateModel(
            name='ProductView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='product.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('product', 'user')},
            },
        ),
    ]
